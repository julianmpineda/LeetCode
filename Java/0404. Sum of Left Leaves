/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        int sum = 0;
        
        if (root.left != null) {
            sum += childRoot(root.left, true);
        }

        if (root.right != null) {
            sum += childRoot(root.right, false);
        }
        
        return sum;
    }

        public int childRoot(TreeNode root, boolean leftChild) {
        int sum = 0;

        if (root.left != null) {
            sum += childRoot(root.left, true);
        }

        if (root.right != null) {
            sum += childRoot(root.right, false);
        }

        if (leftChild && (root.left == null && root.right == null)) {
            sum += root.val;
        }
        
        return sum;
    }
}

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        
        int xMin = 0, xMax = matrix[0].length-1, xCount = 0;
        int yMin = 0, yMax = matrix.length-1, yCount = 0;
        int direction = 0, spaces = (xMax+1)*(yMax+1);
        List<Integer> output = new ArrayList<Integer>();

        // direction map, right, down, left, up
        int[][] dirMap = new int[][]{{1,0}, {0,1}, {-1,0}, {0,-1}};

        for (int i = 0; i < spaces; i++) {
            output.add(matrix[yCount][xCount]);

            if (xCount == xMax && direction == 0) {
                yMin++;
                direction = 1;
            }

            if (yCount == yMax && direction == 1) {
                System.out.println();
                xMax--;
                direction = 2;
            }

             if (xCount == xMin && direction == 2) {
                System.out.println();
                yMax--;
                direction = 3;
            }

            if (yCount == yMin && direction == 3) {
                System.out.println();
                xMin++;
                direction = 0;
            }

            xCount += dirMap[direction][0];
            yCount += dirMap[direction][1];
        }

        return output;
    }
}

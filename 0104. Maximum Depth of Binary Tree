/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxDepth(TreeNode root) {
        if (root == null) {
            return 0;
        }

        int max = 1;
        max += treeDepth(root);
        return max;
    }

    public static int treeDepth(TreeNode root) {
        int depthLeft = 0, depthRight = 0;

        if (root.left != null) {
            depthLeft += 1 + treeDepth(root.left);
        }
        if (root.right != null) {
            depthRight += 1 + treeDepth(root.right);    
        }

        return Math.max(depthRight, depthLeft);
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return false;
        }

        int sum = 0;
        return pathSum(root, targetSum, sum);
    }

    public boolean pathSum(TreeNode root, int targetSum, int sum) {

        boolean left = false, right = false;
        sum += root.val;

        if (root.left == null && root.right == null) {
            if (targetSum == sum){
                return true;
            } else {
                return false;
            }
        } else {
            if (root.left != null) {
                left = pathSum(root.left, targetSum, sum);
            }
            if (root.right != null) {
                right = pathSum(root.right, targetSum, sum);
            }

        }

        return (left || right);
    }
}

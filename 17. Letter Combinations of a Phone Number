class Solution {
    
    private static Map<Integer, char[]> letters = new HashMap<Integer, char[]>();
    
    private static ArrayList<String> answer = new ArrayList<String>();
    
    public static List<String> letterCombinations(String digits) {
        
        populateLetters();
        
        answer.clear();
        
        if (digits.length() == 0) {
            return answer;
        }
        
        int start = Character.getNumericValue(digits.charAt(0));
        
        for (char c : letters.get(start)) {
            String s = "" + c;
            letterRec(s, digits.substring(1));
        }
        
        return answer;
    }
    
    public static void letterRec(String c, String s) {
        
        if (s.length() == 0) {
            answer.add(c);
        } else {
   
            int start = Character.getNumericValue(s.charAt(0));    
            
            for (char next : letters.get(start)) {
                letterRec((c + "" + next), s.substring(1));
            }
        }
    }
    
    private static void populateLetters() {
        letters.put(2, new char[]{'a','b','c'});
        letters.put(3, new char[]{'d','e','f'});
        letters.put(4, new char[]{'g','h','i'});
        letters.put(5, new char[]{'j','k','l'});
        letters.put(6, new char[]{'m','n','o'});
        letters.put(7, new char[]{'p','q','r','s'});
        letters.put(8, new char[]{'t','u','v'});
        letters.put(9, new char[]{'w','x','y','z'});
    }
}

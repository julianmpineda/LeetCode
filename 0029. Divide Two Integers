class Solution {
    public int divide(int dividend, int divisor) {
        int quotient = 0, count = 0, sign = 1;
        boolean overflow = false;

        if (divisor == 1) {
            return dividend;
        } else if (divisor == -1) {
            return dividend*-1;
        } else if (divisor == dividend) {
            return 1;
        }

        if (dividend == Integer.MIN_VALUE) {
            dividend++;
            sign *= -1;
            overflow = true;
        } else if (divisor == Integer.MIN_VALUE) {
            return 0;
        } else if (divisor < 0 ^ dividend < 0) {
            sign *=-1;
        }

        int dividendAbs = Math.abs(dividend);
        int divisorAbs = Math.abs(divisor);

        if (divisorAbs > dividendAbs) {
            return 0;
        }

        while(dividendAbs - count > divisorAbs) {
            quotient++;
            count += divisorAbs;
        }
        
        if (overflow && dividendAbs - count == 1) {
            quotient++;
        }

        return quotient * sign;
    }
}
